{
    "primary_language": "C",
    "language_guidelines": "# General Guidelines : \n**General Guidelines for C/C++ Projects**\n\n1. **Read the README**  \n   Start by reading the project's README file on GitHub. It contains important instructions for installation, usage, and project-specific details.  \n\n2. **Check Dependencies**  \n   Look for dependencies listed in the README or package management files like `CMakeLists.txt` (for CMake), `Makefile` (for Make), or `vcpkg.json` (for vcpkg). Ensure the required compiler and libraries are installed.  \n\n3. **Build Tool**  \n   Identify the build tool the project is using: Make, CMake, or another. This information should be available in the README or through project configuration files (e.g., `Makefile` for Make, `CMakeLists.txt` for CMake).  \n\n4. **Build the Project**  \n   Depending on the build tool, use the appropriate commands to build the project:  \n\n   - For Make:  \n     ```  \n     make  \n     ```  \n   - For CMake:  \n     ```  \n     mkdir build  \n     cd build  \n     cmake ..  \n     make  \n     ```  \n\n5. **Configuration**  \n   Check if the project requires configuration files (e.g., `.conf` files, `config.h` headers) to be set up. This may involve providing paths to dependencies or setting compilation flags.  \n\n6. **Run Tests (if available)**  \n   If the project provides tests, it's a good idea to run them to ensure everything is working correctly. Common testing frameworks for C/C++ include Google Test (gtest), Catch2, and Boost.Test.  \n   - For Google Test:  \n     ```  \n     ./path/to/test_executable  \n     ```  \n   - For Catch2:  \n     ```  \n     ./path/to/test_executable  \n     ```  \n\n7. **Run the Project**  \n   Follow the instructions in the README to run the project. This could involve running a specific executable, starting a server, or executing a specific command.  \n\n8. **Troubleshooting**  \n   If you encounter issues during installation or while running the project, refer to the project's issue tracker on GitHub or search for similar issues.  \n\n9. **Documentation**  \n   Review additional documentation such as Doxygen files, API documentation, or inline comments in the code. Understanding the documentation provides better insights into the project\u2019s structure and usage.",
    "workflow_guidelines": "",
    "readme": "[![Build Status][build-status-img]][travis-ci]\n\n## What is mruby\n\nmruby is the lightweight implementation of the Ruby language complying to (part\nof) the [ISO standard][ISO-standard]. Its syntax is Ruby 1.9 compatible.\n\nmruby can be linked and embedded within your application.  We provide the\ninterpreter program \"mruby\" and the interactive mruby shell \"mirb\" as examples.\nYou can also compile Ruby programs into compiled byte code using the mruby\ncompiler \"mrbc\".  All those tools reside in the \"bin\" directory.  \"mrbc\" is\nalso able to generate compiled byte code in a C source file, see the \"mrbtest\"\nprogram under the \"test\" directory for an example.\n\nThis achievement was sponsored by the Regional Innovation Creation R&D Programs\nof the Ministry of Economy, Trade and Industry of Japan.\n\n## How to get mruby\n\nThe stable version 1.2.0 of mruby can be downloaded via the following URL: [https://github.com/mruby/mruby/archive/1.2.0.zip](https://github.com/mruby/mruby/archive/1.2.0.zip)\n\nThe latest development version of mruby can be downloaded via the following URL: [https://github.com/mruby/mruby/zipball/master](https://github.com/mruby/mruby/zipball/master)\n\nThe trunk of the mruby source tree can be checked out with the\nfollowing command:\n\n    $ git clone https://github.com/mruby/mruby.git\n\nYou can also install and compile mruby using [ruby-install](https://github.com/postmodern/ruby-install), [ruby-build](https://github.com/rbenv/ruby-build) or [rvm](https://github.com/rvm/rvm).\n\n## mruby home-page\n\nThe URL of the mruby home-page is: [http://www.mruby.org](http://www.mruby.org).\n\n## Mailing list\n\nWe don't have a mailing list, but you can use [GitHub issues](https://github.com/mruby/mruby).\n\n## How to compile and install (mruby and gems)\n\nSee the [doc/guides/compile.md](doc/guides/compile.md) file.\n\n## Running Tests\n\nTo run the tests, execute the following from the project's root directory.\n\n    $ make test\n\nOr\n\n    $ ruby ./minirake test\n\n## How to customize mruby (mrbgems)\n\nmruby contains a package manager called *mrbgems*. To create extensions\nin C and/or Ruby you should create a *GEM*. For a documentation of how to\nuse mrbgems consult the file [doc/guides/mrbgems.md](doc/guides/mrbgems.md). For example code of\nhow to use mrbgems look into the folder *examples/mrbgems/*.\n\n## License\n\nmruby is released under the [MIT License](MITL).\n\n## Note for License\n\nmruby has chosen a MIT License due to its permissive license allowing\ndevelopers to target various environments such as embedded systems.\nHowever, the license requires the display of the copyright notice and license\ninformation in manuals for instance. Doing so for big projects can be\ncomplicated or troublesome.  This is why mruby has decided to display \"mruby\ndevelopers\" as the copyright name to make it simple conventionally.\nIn the future, mruby might ask you to distribute your new code\n(that you will commit,) under the MIT License as a member of\n\"mruby developers\" but contributors will keep their copyright.\n(We did not intend for contributors to transfer or waive their copyrights,\nActual copyright holder name (contributors) will be listed in the AUTHORS\nfile.)\n\nPlease ask us if you want to distribute your code under another license.\n\n## How to Contribute\n\nSee the [contribution guidelines][contribution-guidelines], and then send a pull\nrequest to <http://github.com/mruby/mruby>.  We consider you have granted\nnon-exclusive right to your contributed code under MIT license.  If you want to\nbe named as one of mruby developers, please include an update to the AUTHORS\nfile in your pull request.\n\n[ISO-standard]: http://www.iso.org/iso/iso_catalogue/catalogue_tc/catalogue_detail.htm?csnumber=59579\n[build-status-img]: https://travis-ci.org/mruby/mruby.svg?branch=master\n[contribution-guidelines]: CONTRIBUTING.md\n[travis-ci]: https://travis-ci.org/mruby/mruby\n"
}