{
    "primary_language": "TypeScript",
    "language_guidelines": "",
    "workflow_guidelines": "\nThe following workflow files might contain information on how to set up the project and run test cases.  This might be useful later on when building/installing and testing the project:\n\nfile: ci.yml\nContent:\nname: CI\n\non:\n  push:\n    paths-ignore:\n      - \"docs/**\"\n      - \"*.md\"\n    branches:\n      - main\n  pull_request:\n    paths-ignore:\n      - \"docs/**\"\n      - \"*.md\"\n    branches:\n      - main\n      - \"!v[0-9]*\"\n\n# https://github.com/vitejs/vite/blob/main/.github/workflows/ci.yml\nenv:\n  # 7 GiB by default on GitHub, setting to 6 GiB\n  # https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners#supported-runners-and-hardware-resources\n  NODE_OPTIONS: --max-old-space-size=6144\n  # install playwright binary manually (because pnpm only runs install script once)\n  PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: \"1\"\n\n\n# Remove default permissions of GITHUB_TOKEN for security\n# https://docs.github.com/en/actions/using-jobs/assigning-permissions-to-jobs\npermissions: {}\n\nconcurrency:\n  group: ${{ github.workflow }}-${{ github.event.number || github.sha }}\n  cancel-in-progress: ${{ github.event_name != 'push' }}\n\njobs:\n  build:\n    runs-on: ubuntu-latest\n    timeout-minutes: 10\n\n    steps:\n      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1\n      - run: corepack enable\n      - uses: actions/setup-node@8f152de45cc393bb48ce5d89d36b731f54556e65 # v4.0.0\n        with:\n          node-version: 20\n          cache: \"pnpm\"\n\n      - name: Install dependencies\n        run: pnpm install\n\n      - name: Build (stub)\n        run: pnpm build:stub\n\n      - name: Typecheck\n        run: pnpm typecheck\n\n      - name: Build\n        run: pnpm build\n\n      - name: Cache dist\n        uses: actions/upload-artifact@a8a3f3ad30e3422c9c7b888a15615d19a852ae32 # v3.1.3\n        with:\n          retention-days: 3\n          name: dist\n          path: packages/*/dist\n\n  codeql:\n    runs-on: ubuntu-latest\n    timeout-minutes: 10\n    permissions:\n      actions: read\n      contents: read\n      security-events: write\n    needs:\n     - build\n\n    steps:\n      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1\n      - run: corepack enable\n      - uses: actions/setup-node@8f152de45cc393bb48ce5d89d36b731f54556e65 # v4.0.0\n        with:\n          node-version: 20\n          cache: \"pnpm\"\n\n      - name: Install dependencies\n        run: pnpm install\n\n      - name: Initialize CodeQL\n        uses: github/codeql-action/init@407ffafae6a767df3e0230c3df91b6443ae8df75 # v2.22.8\n        with:\n          languages: javascript\n          queries: +security-and-quality\n\n      - name: Restore dist cache\n        uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3.0.2\n        with:\n          name: dist\n          path: packages\n\n      - name: Perform CodeQL Analysis\n        uses: github/codeql-action/analyze@407ffafae6a767df3e0230c3df91b6443ae8df75 # v2.22.8\n        with:\n          category: \"/language:javascript\"\n\n  typecheck:\n    runs-on: ${{ matrix.os }}\n    timeout-minutes: 10\n    needs:\n      - build\n    strategy:\n      fail-fast: false\n      matrix:\n        os: [ubuntu-latest, windows-latest]\n        module: ['bundler', 'node']\n\n    steps:\n      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1\n      - run: corepack enable\n      - uses: actions/setup-node@8f152de45cc393bb48ce5d89d36b731f54556e65 # v4.0.0\n        with:\n          node-version: 20\n          cache: \"pnpm\"\n\n      - name: Install dependencies\n        run: pnpm install\n\n      - name: Restore dist cache\n        uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3.0.2\n        with:\n          name: dist\n          path: packages\n\n      - name: Test (types)\n        run: pnpm test:types\n        env:\n          MODULE_RESOLUTION: ${{ matrix.module }}\n\n  lint:\n    # autofix workflow will be triggered instead for PRs\n    if: github.event_name == 'push'\n    runs-on: ubuntu-latest\n    timeout-minutes: 10\n\n    steps:\n      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1\n      - run: corepack enable\n      - uses: actions/setup-node@8f152de45cc393bb48ce5d89d36b731f54556e65 # v4.0.0\n        with:\n          node-version: 20\n          cache: \"pnpm\"\n\n      - name: Install dependencies\n        run: pnpm install\n\n      - name: Build (stub)\n        run: pnpm build:stub\n\n      - name: Lint\n        run: pnpm lint\n\n  test-fixtures:\n    runs-on: ${{ matrix.os }}\n    needs:\n      - build\n\n    strategy:\n      fail-fast: false\n      matrix:\n        os: [ubuntu-latest, windows-latest]\n        env: ['dev', 'built']\n        builder: ['vite', 'webpack']\n        context: ['async', 'default']\n        manifest: ['manifest-on', 'manifest-off']\n        node: [18]\n        exclude:\n          - env: 'dev'\n            builder: 'webpack'\n          - manifest: 'manifest-off'\n            builder: 'webpack'\n\n    timeout-minutes: 15\n\n    steps:\n      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1\n      - run: corepack enable\n      - uses: actions/setup-node@8f152de45cc393bb48ce5d89d36b731f54556e65 # v4.0.0\n        with:\n          node-version: ${{ matrix.node }}\n          cache: \"pnpm\"\n\n      - name: Install dependencies\n        run: pnpm install\n\n      # Install playwright's binary under custom directory to cache\n      - name: (non-windows) Set Playwright path and Get playwright version\n        if: runner.os != 'Windows'\n        run: |\n          echo \"PLAYWRIGHT_BROWSERS_PATH=$HOME/.cache/playwright-bin\" >> $GITHUB_ENV\n          PLAYWRIGHT_VERSION=\"$(pnpm ls --depth 0 --json -w playwright | jq --raw-output '.[0].unsavedDependencies[\"playwright\"].version')\"\n          echo \"PLAYWRIGHT_VERSION=$PLAYWRIGHT_VERSION\" >> $GITHUB_ENV\n\n      - name: (windows) Set Playwright path and Get playwright version\n        if: runner.os == 'Windows'\n        run: |\n          echo \"PLAYWRIGHT_BROWSERS_PATH=$HOME\\.cache\\playwright-bin\" >> $env:GITHUB_ENV\n          $env:PLAYWRIGHT_VERSION=\"$(pnpm ls --depth 0 --json -w playwright | jq --raw-output '.[0].unsavedDependencies[\\\"playwright\\\"].version')\"\n          echo \"PLAYWRIGHT_VERSION=$env:PLAYWRIGHT_VERSION\" >> $env:GITHUB_ENV\n\n      - name: Cache Playwright's binary\n        uses: actions/cache@704facf57e6136b1bc63b828d79edcd491f0ee84 # v3.3.2\n        with:\n          key: ${{ runner.os }}-playwright-bin-v1-${{ env.PLAYWRIGHT_VERSION }}\n          path: ${{ env.PLAYWRIGHT_BROWSERS_PATH }}\n          restore-keys: |\n            ${{ runner.os }}-playwright-bin-v1-\n\n      - name: Install Playwright\n        run: pnpm playwright-core install chromium\n\n      - name: Restore dist cache\n        uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3.0.2\n        with:\n          name: dist\n          path: packages\n\n      - name: Test (unit)\n        run: pnpm test:unit\n\n      - name: Test (runtime unit)\n        run: pnpm test:runtime\n\n      - name: Test (fixtures)\n        run: pnpm test:fixtures\n        env:\n          TEST_ENV: ${{ matrix.env }}\n          TEST_BUILDER: ${{ matrix.builder }}\n          TEST_MANIFEST: ${{ matrix.manifest }}\n          TEST_CONTEXT: ${{ matrix.context }}\n          SKIP_BUNDLE_SIZE: ${{ github.event_name != 'push' || matrix.env == 'dev' || matrix.builder == 'webpack' || matrix.context == 'default' || runner.os == 'Windows' }}\n\n      - uses: codecov/codecov-action@eaaf4bedf32dbdc6b720b63067d99c4d77d6047d # v3.1.4\n        if: github.event_name != 'push' && matrix.env == 'built' && matrix.builder == 'vite' && matrix.context == 'default' && matrix.os == 'ubuntu-latest' && matrix.manifest == 'manifest-on'\n        with:\n          token: ${{ secrets.CODECOV_TOKEN }}\n\n  build-release:\n    permissions:\n      id-token: write\n    if: |\n      github.event_name == 'push' &&\n      !contains(github.event.head_commit.message, '[skip-release]') &&\n      !contains(github.event.head_commit.message, 'chore') &&\n      !contains(github.event.head_commit.message, 'docs')\n    needs:\n      - lint\n      - build\n      - test-fixtures\n    runs-on: ubuntu-latest\n    timeout-minutes: 20\n\n    steps:\n      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1\n        with:\n          fetch-depth: 0\n      - run: corepack enable\n      - uses: actions/setup-node@8f152de45cc393bb48ce5d89d36b731f54556e65 # v4.0.0\n        with:\n          node-version: 20\n          cache: \"pnpm\"\n\n      - name: Install dependencies\n        run: pnpm install\n\n      - name: Restore dist cache\n        uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3.0.2\n        with:\n          name: dist\n          path: packages\n\n      - name: Release Edge\n        run: ./scripts/release-edge.sh\n        env:\n          NODE_AUTH_TOKEN: ${{secrets.NODE_AUTH_TOKEN}}\n          NPM_CONFIG_PROVENANCE: true\n\n  release-pr:\n    permissions:\n      id-token: write\n      pull-requests: write\n    if: |\n      github.event_name == 'pull_request' &&\n      contains(github.event.pull_request.labels.*.name, '\ud83e\uddf7 edge release')\n    needs:\n      - lint\n      - build\n      - test-fixtures\n    runs-on: ubuntu-latest\n    timeout-minutes: 20\n\n    steps:\n      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1\n        with:\n          fetch-depth: 0\n      - run: corepack enable\n      - uses: actions/setup-node@8f152de45cc393bb48ce5d89d36b731f54556e65 # v4.0.0\n        with:\n          node-version: 20\n          cache: \"pnpm\"\n\n      - name: Install dependencies\n        run: pnpm install\n\n      - name: Restore dist cache\n        uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3.0.2\n        with:\n          name: dist\n          path: packages\n\n      - name: Release Edge\n        run: ./scripts/release-edge.sh pr-${{ github.event.issue.number }}\n        env:\n          NODE_AUTH_TOKEN: ${{secrets.NODE_AUTH_TOKEN}}\n          NPM_CONFIG_PROVENANCE: true\n\nfile: ecosystem-ci-trigger.yml\nContent:\nname: ecosystem-ci trigger\n\non:\n  issue_comment:\n    types: [created]\n\npermissions:\n  pull-requests: write\n\njobs:\n  trigger:\n    runs-on: ubuntu-latest\n    if: github.repository == 'nuxt/nuxt' && github.event.issue.pull_request && startsWith(github.event.comment.body, '/ecosystem-ci run')\n    steps:\n      - uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1\n        with:\n          script: |\n            const user = context.payload.sender.login\n            console.log(`Validate user: ${user}`)\n\n            let hasTriagePermission = false\n            try {\n              const { data } = await github.rest.repos.getCollaboratorPermissionLevel({\n                owner: context.repo.owner,\n                repo: context.repo.repo,\n                username: user,\n              });\n              hasTriagePermission = data.user.permissions.triage\n            } catch (e) {\n              console.warn(e)\n            }\n\n            if (hasTriagePermission) {\n              console.log('Allowed')\n              await github.rest.reactions.createForIssueComment({\n                owner: context.repo.owner,\n                repo: context.repo.repo,\n                comment_id: context.payload.comment.id,\n                content: '+1',\n              })\n            } else {\n              console.log('Not allowed')\n              await github.rest.reactions.createForIssueComment({\n                owner: context.repo.owner,\n                repo: context.repo.repo,\n                comment_id: context.payload.comment.id,\n                content: '-1',\n              })\n              throw new Error('not allowed')\n            }\n      - uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1\n        id: get-pr-data\n        with:\n          script: |\n            console.log(`Get PR info: ${context.repo.owner}/${context.repo.repo}#${context.issue.number}`)\n            const { data: pr } = await github.rest.pulls.get({\n              owner: context.repo.owner,\n              repo: context.repo.repo,\n              pull_number: context.issue.number\n            })\n            return {\n              num: context.issue.number,\n              branchName: pr.head.ref,\n              repo: pr.head.repo.full_name\n            }\n      - id: generate-token\n        uses: tibdex/github-app-token@3beb63f4bd073e61482598c45c71c1019b59b73a # v2.1.0\n        with:\n          app_id: ${{ secrets.ECOSYSTEM_CI_GITHUB_APP_ID }}\n          private_key: ${{ secrets.ECOSYSTEM_CI_GITHUB_APP_PRIVATE_KEY }}\n          repository: \"${{ github.repository_owner }}/ecosystem-ci\"\n      - uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1\n        id: trigger\n        env:\n          COMMENT: ${{ github.event.comment.body }}\n        with:\n          github-token: ${{ steps.generate-token.outputs.token }}\n          result-encoding: string\n          script: |\n            const comment = process.env.COMMENT.trim()\n            const prData = ${{ steps.get-pr-data.outputs.result }}\n\n            const suite = comment.split('\\n')[0].replace(/^\\/ecosystem-ci run/, '').trim()\n\n            await github.rest.actions.createWorkflowDispatch({\n              owner: context.repo.owner,\n              repo: 'ecosystem-ci',\n              workflow_id: 'ecosystem-ci-from-pr.yml',\n              ref: 'main',\n              inputs: {\n                prNumber: '' + prData.num,\n                branchName: prData.branchName,\n                repo: prData.repo,\n                suite: suite === '' ? '-' : suite\n              }\n            })\n",
    "readme": "[![Nuxt banner](./.github/assets/banner.svg)](https://nuxt.com)\n\n# Nuxt\n\n<p>\n  <a href=\"https://www.npmjs.com/package/nuxt\"><img src=\"https://img.shields.io/npm/v/nuxt.svg?style=flat&colorA=18181B&colorB=28CF8D\" alt=\"Version\"></a>\n  <a href=\"https://www.npmjs.com/package/nuxt\"><img src=\"https://img.shields.io/npm/dm/nuxt.svg?style=flat&colorA=18181B&colorB=28CF8D\" alt=\"Downloads\"></a>\n  <a href=\"./LICENSE\"><img src=\"https://img.shields.io/github/license/nuxt/nuxt.svg?style=flat&colorA=18181B&colorB=28CF8D\" alt=\"License\"></a>\n  <a href=\"https://nuxt.com\"><img src=\"https://img.shields.io/badge/Nuxt%20Docs-18181B?logo=nuxt.js\" alt=\"Website\"></a>\n  <a href=\"https://chat.nuxt.dev\"><img src=\"https://img.shields.io/badge/Nuxt%20Discord-18181B?logo=discord\" alt=\"Discord\"></a>\n</p>\n\nNuxt is a free and open-source framework with an intuitive and extendable way to create type-safe, performant and production-grade full-stack web applications and websites with Vue.js.\n\nIt provides a number of features that make it easy to build fast, SEO-friendly, and scalable web applications, including:\n- Server-side rendering, Static Site Generation or Hybrid Rendering\n- Automatic routing with code-splitting\n- State management\n- SEO Optimization\n- Auto imports\n- Extensible with [180+ modules](https://nuxt.com/modules)\n- Deployment to a variety of [hosting platforms](https://nuxt.com/deploy)\n- ...[and much more](https://nuxt.com) \ud83d\ude80\n\n## Getting Started\n\nUse the following command to create a new starter project. This will create a starter project with all the necessary files and dependencies:\n\n```bash\nnpx nuxi@latest init <my-project>\n```\n\nDiscover also [nuxt.new](https://nuxt.new): Open a Nuxt starter on CodeSandbox, StackBlitz or locally to get up and running in a few seconds.\n\n## Vue Development\n\nSimple, intuitive and powerful, Nuxt lets you write Vue components in a way that makes sense. Every repetitive task is automated, so you can focus on writing your full-stack Vue application with confidence.\n\nExample of an `app.vue`:\n\n```vue\n<script setup>\nuseSeoMeta({\n  title: 'Meet Nuxt',\n  description: 'The Intuitive Vue Framework.'\n})\n</script>\n\n<template>\n  <div id=\"app\">\n    <AppHeader />\n    <NuxtPage />\n    <AppFooter />\n  </div>\n</template>\n\n<style>\n#app {\n  background-color: #020420;\n  color: #00DC82;\n}\n</style>\n```\n\n## Documentation\n\nWe highly recommend you take a look at the [Nuxt documentation](https://nuxt.com/docs) to level up. It\u2019s a great resource for learning more about the framework. It covers everything from getting started to advanced topics.\n\n## Modules\n\nDiscover our [list of modules](https://nuxt.com/modules) to supercharge your Nuxt project, created by the Nuxt team and community.\n\n## Contribute\n\nWe invite you to contribute and help improve Nuxt \ud83d\udc9a\n\nHere are a few ways you can get involved:\n- **Reporting Bugs:** If you come across any bugs or issues, please check out the [reporting bugs guide](https://nuxt.com/docs/community/reporting-bugs) to learn how to submit a bug report.\n- **Suggestions:** Have ideas to enhance Nuxt? We'd love to hear them! Check out the [contribution guide](https://nuxt.com/docs/community/contribution#creating-an-issue) to share your suggestions.\n- **Questions:** If you have questions or need assistance, the [getting help guide](https://nuxt.com/docs/community/getting-help) provides resources to help you out.\n\n## Local Development\n\nFollow the docs to [Set Up Your Local Development Environment](https://nuxt.com/docs/community/framework-contribution#setup) to contribute to the framework and documentation.\n\n## Nuxt 2\n\nYou can find the code for Nuxt 2 on the [`2.x` branch](https://github.com/nuxt/nuxt/tree/2.x) and the documentation at [v2.nuxt.com](https://v2.nuxt.com).\n\n## Follow us\n\n<p valign=\"center\">\n  <a href=\"https://chat.nuxt.dev\"><img width=\"20px\" src=\"./.github/assets/discord.svg\" alt=\"Discord\"></a>&nbsp;&nbsp;<a href=\"https://twitter.nuxt.dev\"><img width=\"20px\" src=\"./.github/assets/twitter.svg\" alt=\"Twitter\"></a>&nbsp;&nbsp;<a href=\"https://github.nuxt.dev\"><img width=\"20px\" src=\"./.github/assets/github.svg\" alt=\"GitHub\"></a>\n</p>\n\n## License\n\n[MIT](./LICENSE)\n\n"
}