{
    "primary_language": "Python",
    "language_guidelines": "# General Guidelines:\n**General Guidelines for Python Projects**\n\n1. **Read the README**  \n   Always start by reading the project's README file on GitHub. It usually contains important instructions for installation, usage, and any project-specific details. Some projects include a `Dockerfile` script, which you can review and reuse as needed.  \n\n2. **Check Dependencies**  \n   Look for dependencies listed in the README or in a `requirements.txt` file. Ensure you have the required versions of Python and any other libraries/packages.  \n\n3. **Virtual Environment**  \n   It\u2019s a good practice to create a virtual environment for each Python project to avoid conflicts with system-wide packages. Use the command:  \n   ```sh\n   python3.X -m venv .venv  \n   ```  \n\n4. **Configuration**  \n   Check if the project requires any configuration files (e.g., `.env` files) and set them up accordingly.  \n\n5. **Build the Project (rare cases)**  \n   Some projects might require building before usage, especially if they include C extensions or require compiling assets.  \n\n6. **Run Tests (if available)**  \n   If the project provides tests, it\u2019s a good idea to run them to ensure everything is working correctly. Some projects include a `tox.ini` file, which allows you to run tests with `tox`. Install `tox` first using:  \n   ```sh\n   pip install tox  \n   ```  \n\n7. **Run the Project**  \n   Follow the instructions in the README to run the project. This could involve running a script, starting a server, or executing a specific command.  \n\n8. **Troubleshooting**  \n   If you encounter issues during installation or while running the project, refer to the project\u2019s issue tracker on GitHub or search for similar issues others may have encountered.  \n\n9. **Test Suite Results**  \n   When running a test suite, it is normal for some test cases to fail. If the percentage of failing test cases is less than 20% of the total number, it is considered acceptable, and further investigation is not necessary.  \n\n10. **Shell Compatibility**  \n   In some shells, the `source` command may not work. In such cases, replace `source` with just `.` (a single dot). For example:  \n   ```sh\n   . .venv/bin/activate  \n   ```  \n\n11. **Avoid Using Conda**  \n   Instead of Conda, prefer the following commands to set up your virtual environment:  \n   ```sh\n   python -m venv .venv  \n   . .venv/bin/activate  \n   ```  ",
    "workflow_guidelines": "\nThe following workflow files might contain information on how to set up the project and run test cases.  This might be useful later on when building/installing and testing the project:\n\nfile: builddoc.yml\nContent:\nname: Build document\n\non: [push, pull_request]\n\npermissions:\n  contents: read\n\njobs:\n  build:\n    runs-on: ubuntu-latest\n\n    steps:\n    - uses: actions/checkout@v3\n    - name: Set up Python\n      uses: actions/setup-python@v4\n      with:\n        python-version: 3\n    - name: Install dependencies\n      run:  |\n        sudo apt update\n        sudo apt install -y graphviz\n        pip install -U tox\n    - name: Run Tox\n      run:  tox -e docs\n\nfile: docutils-latest.yml\nContent:\nname: Test with the HEAD of docutils\n\non:\n  schedule:\n  - cron: \"0 0 * * SUN\"\n  workflow_dispatch:\n\npermissions:\n  contents: read\n\njobs:\n  test:\n    if: github.repository_owner == 'sphinx-doc'\n    runs-on: ubuntu-latest\n\n    steps:\n    - uses: actions/checkout@v3\n    - name: Set up Python\n      uses: actions/setup-python@v4\n      with:\n        python-version: 3\n    - name: Check Python version\n      run: python --version\n    - name: Unpin docutils\n      run: sed -i -e \"s/'docutils>=.*'/'docutils'/\" setup.py\n    - name: Install graphviz\n      run: sudo apt-get install graphviz\n    - name: Install dependencies\n      run: pip install -U tox codecov\n    - name: Run Tox\n      run: tox -e du-latest -- -vv\n\nfile: main.yml\nContent:\nname: CI\n\non: [push, pull_request]\n\npermissions:\n  contents: read\n\njobs:\n  ubuntu:\n    runs-on: ubuntu-18.04\n    name: Python ${{ matrix.python }} (${{ matrix.docutils }})\n    strategy:\n      fail-fast: false\n      matrix:\n        include:\n        - python: \"3.6\"\n          docutils: du14\n        - python: \"3.7\"\n          docutils: du15\n        - python: \"3.8\"\n          docutils: du16\n        - python: \"3.9\"\n          docutils: du17\n        - python: \"3.10\"\n          docutils: du18\n        - python: \"3.10\"\n          docutils: du19\n        - python: \"3.11-dev\"\n          docutils: py311\n\n    steps:\n    - uses: actions/checkout@v3\n    - name: Set up Python ${{ matrix.python }}\n      uses: actions/setup-python@v4\n      if: \"!endsWith(matrix.python, '-dev')\"\n      with:\n        python-version: ${{ matrix.python }}\n    - name: Set up Python ${{ matrix.python }} (deadsnakes)\n      uses: deadsnakes/action@v2.1.1\n      if: \"endsWith(matrix.python, '-dev')\"\n      with:\n        python-version: ${{ matrix.python }}\n    - name: Check Python version\n      run: python --version\n    - name: Install graphviz\n      run: sudo apt-get install graphviz\n    - name: Install dependencies\n      run: python -m pip install -U pip tox\n    - name: Run Tox\n      run: tox -e ${{ matrix.docutils }} -- -vv\n\n  windows:\n    runs-on: windows-2019\n    steps:\n    - uses: actions/checkout@v3\n    - name: Set up Python\n      uses: actions/setup-python@v4\n      with:\n        python-version: 3\n    - name: Install dependencies\n      run:  python -m pip install -U pip tox\n    - name: Run Tox\n      run:  tox -e py -- -vv\n",
    "readme": "========\n Sphinx\n========\n\n.. image:: https://img.shields.io/pypi/v/sphinx.svg\n   :target: https://pypi.org/project/Sphinx/\n   :alt: Package on PyPI\n\n.. image:: https://github.com/sphinx-doc/sphinx/actions/workflows/main.yml/badge.svg\n   :target: https://github.com/sphinx-doc/sphinx/actions/workflows/main.yml\n   :alt: Build Status\n\n.. image:: https://readthedocs.org/projects/sphinx/badge/?version=master\n   :target: https://www.sphinx-doc.org/\n   :alt: Documentation Status\n\n.. image:: https://img.shields.io/badge/License-BSD%202--Clause-blue.svg\n   :target: https://opensource.org/licenses/BSD-2-Clause\n   :alt: BSD 2 Clause\n\n**Sphinx makes it easy to create intelligent and beautiful documentation.**\n\nSphinx uses reStructuredText as its markup language, and many of its strengths\ncome from the power and straightforwardness of reStructuredText and its parsing\nand translating suite, the Docutils.\n\nFeatures\n========\n\n* **Output formats**: HTML, PDF, plain text, EPUB, TeX, manual pages, and more\n* **Extensive cross-references**: semantic markup and automatic links\n  for functions, classes, glossary terms and similar pieces of information\n* **Hierarchical structure**: easy definition of a document tree, with automatic\n  links to siblings, parents and children\n* **Automatic indices**: general index as well as a module index\n* **Code highlighting**: automatic highlighting using the Pygments highlighter\n* **Templating**: Flexible HTML output using the Jinja 2 templating engine\n* **Extension ecosystem**: Many extensions are available, for example for\n  automatic function documentation or working with Jupyter notebooks.\n* **Language Support**: Python, C, C++, JavaScript, mathematics, and many other\n  languages through extensions.\n\nFor more information, refer to the `the documentation`_.\n\nInstallation\n============\n\nThe following command installs Sphinx from the `Python Package Index`_. You will\nneed a working installation of Python and pip.\n\n.. code-block:: sh\n\n   pip install -U sphinx\n\nContributing\n============\n\nWe appreciate all contributions! Refer to `the contributors guide`_ for\ninformation.\n\nRelease signatures\n==================\n\nReleases are signed with following keys:\n\n* `498D6B9E <https://pgp.mit.edu/pks/lookup?op=vindex&search=0x102C2C17498D6B9E>`_\n* `5EBA0E07 <https://pgp.mit.edu/pks/lookup?op=vindex&search=0x1425F8CE5EBA0E07>`_\n* `61F0FB52 <https://pgp.mit.edu/pks/lookup?op=vindex&search=0x52C8F72A61F0FB52>`_\n\n.. _the documentation: https://www.sphinx-doc.org/\n.. _the contributors guide: https://www.sphinx-doc.org/en/master/internals/contributing.html\n.. _Python Package Index: https://pypi.org/project/Sphinx/\n"
}