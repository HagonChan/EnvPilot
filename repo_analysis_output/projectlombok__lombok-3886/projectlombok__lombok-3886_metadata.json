{
    "primary_language": "Java",
    "language_guidelines": "Programming Language guidelines for Java:\n# General Guidelines:\n**General Guidelines for Java Projects**\n\n1. **Read the README**  \n   Start by reading the project's README file on GitHub. It often contains important instructions for installation, usage, and any project-specific details.  \n\n2. **Check Dependencies**  \n   Look for any dependencies listed in the README or in configuration files like `pom.xml` (for Maven) or `build.gradle` (for Gradle). Ensure you have the required JDK version installed.  \n\n3. **Build Tool**  \n   Identify which build tool the project is using: Maven or Gradle. This information should be available in the README or through project configuration files (`pom.xml` for Maven, `build.gradle` for Gradle).  \n\n4. **Build the Project**  \n   Use the appropriate commands based on the build tool:  \n   - For Maven:  \n     ```  \n     mvn clean install  \n     ```  \n   - For Gradle:  \n     ```  \n     gradle build  \n     ```  \n\n5. **Configuration**  \n   Check if the project requires any configuration files (e.g., property files, YAML files) and set them up accordingly.  \n\n6. **Run Tests (if available)**  \n   If the project provides tests, it\u2019s a good idea to run them to ensure everything is working correctly.  \n\n7. **Run the Project**  \n   Follow the instructions in the README to run the project. This could involve running a specific class, starting a server, or executing a specific command.  \n\n8. **Troubleshooting**  \n   If you encounter any issues during installation or while running the project, refer to the project\u2019s issue tracker on GitHub or search for similar issues others may have encountered.  \n\n9. **Test Suite Results**  \n   When running a test suite, it is normal for some test cases to fail. If the percentage of failing test cases is less than 20% of the total number, it is considered acceptable, and further investigation is usually not necessary.  ",
    "workflow_guidelines": "",
    "readme": "# Project Lombok\n\n**Project Lombok** is a java library that automatically plugs into your editor and build tools, spicing up your java.\nNever write another getter or equals method again, with one annotation your class has a fully featured builder, automate your logging variables, and much more.\n\nSee [LICENSE] for the Project Lombok license.\n\nLooking for professional support of Project Lombok? Lombok is now part of a [tidelift subscription]!\n\nFor a list of all authors, see the [AUTHORS] file. \n\nFor complete project information, a short tutorial on what lombok does, and how to download / use / install it, see [projectlombok.org]\n\nYou can review our security policy via [SECURITY.md]\n\n[LICENSE]: https://github.com/projectlombok/lombok/blob/master/LICENSE\n[AUTHORS]: https://github.com/projectlombok/lombok/blob/master/AUTHORS\n[SECURITY.md]: https://github.com/projectlombok/lombok/blob/master/SECURITY.md\n[projectlombok.org]: https://projectlombok.org/\n[tidelift subscription]: https://tidelift.com/subscription/pkg/maven-org-projectlombok-lombok?utm_source=maven-org-projectlombok-lombok&utm_medium=referral&campaign=website\n",
    "org": "projectlombok",
    "repo": "lombok",
    "number": 3886,
    "commit": "b223db18182c312b2ffac379d954ea9b6fd28b7e"
}