[
  {
    "problem": "Essential build tools (clang, cmake, make) were missing in the Ubuntu environment.",
    "solution": "The root cause was the absence of required compilers and build utilities needed to compile the project from source. The solution was to install these tools using the system package manager to meet the build dependencies.",
    "action": "apt-get update && apt-get install -y clang cmake make"
  },
  {
    "problem": "Missing libexecinfo dependency required for Alpine Linux builds caused installation failures",
    "solution": "The BUILD.md specified libexecinfo as a dependency for Alpine, but it was unavailable in default repositories. The root cause was repository version mismatch (Alpine 3.22 vs required 3.12 packages). The solution was adding Alpine 3.12 repositories and installing libexecinfo-dev/libexecinfo-static.",
    "action": "echo \"https://dl-cdn.alpinelinux.org/alpine/v3.12/main\" >> /etc/apk/repositories && apk update && apk add libexecinfo-dev libexecinfo-static"
  },
  {
    "problem": "Dependency installation failed due to Python version incompatibility",
    "solution": "The typed-ast package required for testing was incompatible with Python 3.13. The root cause was outdated dependency compatibility. The solution was to install dependencies using Python 3.11, which required first installing the python3.11-venv package to enable virtual environment creation.",
    "action": "apt-get install -y python3.11-venv && python3.11 -m venv .venv && . .venv/bin/activate && python -m pip install -U -r test-requirements.txt"
  },
  {
    "problem": "Pip was unavailable for the newly installed Python version, preventing dependency installation.",
    "solution": "Debian/Ubuntu systems disable ensurepip for system Python installations. The root cause was missing pip in the Python 3.11 environment. The solution was to install the system's python3-pip package to enable pip functionality.",
    "action": "apt-get install -y python3-pip"
  },
  {
    "problem": "System libraries required for headless browser operation were missing, causing Puppeteer launch failures.",
    "solution": "Puppeteer dependencies like libnss3, libatk, and others were absent, resulting in shared library errors during browser launch. The root cause was an incomplete base system image. The solution was to install all required libraries via the system package manager.",
    "action": "apt-get update && apt-get install -y libnss3 libatk1.0-0 libatk-bridge2.0-0 libcups2 libdbus-1-3 libexpat1 libgcc1 libgconf-2-4 libgdk-pixbuf2.0-0 libglib2.0-0 libgtk-3-0 libpango-1.0-0 libpangocairo-1.0-0 libstdc++6 libx11-6 libx11-xcb1 libxcb1 libxcomposite1 libxcursor1 libxdamage1 libxext6 libxfixes3 libxi6 libxrandr2 libxrender1 libxss1 libxtst6 ca-certificates fonts-liberation libgbm-dev libasound2"
  },
  {
    "problem": "Python 3.13 was incompatible with project dependencies",
    "solution": "The default Python version (3.13) lacked compatibility with critical dependencies like PyYAML. The root cause was unsupported Python versions in dependency wheels. The solution was to install Python 3.11 and create a virtual environment to isolate the project runtime.",
    "action": "apt-get install -y python3.11 python3.11-venv python3.11-dev && python3.11 -m venv venv"
  },
  {
    "problem": "The clang compiler was not installed, which is required for building the project",
    "solution": "The root cause was the missing clang package on the Ubuntu system, which is necessary for compiling C/C++ projects that specify clang as the supported compiler. The solution involved installing clang along with other build dependencies (cmake and make) using the system package manager.",
    "action": "apt install -y clang cmake make"
  },
  {
    "problem": "The alternative Python version lacked pip, preventing dependency installation.",
    "solution": "The root cause was the absence of pip for Python 3.11. The solution was to install the pip package for the system, enabling dependency management for the compatible Python version.",
    "action": "apt-get install -y python3-pip"
  },
  {
    "problem": "Required build tools (g++, cmake, make) were missing for project compilation",
    "solution": "The root cause was insufficient build dependencies as specified in the project documentation. The solution was to install the missing tools using the package manager to satisfy the build requirements.",
    "action": "apt-get install -y g++ cmake make"
  },
  {
    "problem": "Test runner used an incompatible Python version (3.13) causing dependency resolution failures",
    "solution": "The pytest command defaulted to Python 3.13, which lacked compatible dependencies. The root cause was incorrect Python version specification in the test execution environment. The solution was explicitly configuring the test command to use Python 3.11 for pytest execution.",
    "action": "echo 'python3.11 -m pytest --no-header -rA --tb=no -p no:cacheprovider' > /home/conan/test_commands.sh"
  },
  {
    "problem": "PEP 668 prevented system-wide pip installations",
    "solution": "The externally-managed environment error blocked package installation due to PEP 668 enforcement. The root cause was attempting system-wide installs in a restricted environment. The solution was to create a virtual environment for isolated dependency management.",
    "action": "python3.11 -m venv .venv"
  },
  {
    "problem": "The cmake build tool was not installed on the Ubuntu system",
    "solution": "The root cause was the absence of the cmake package in the environment, which is required for building CMake-based projects. The solution involved updating the package index and installing cmake using the apt package manager.",
    "action": "apt-get update && apt-get install -y cmake"
  }
]