{
    "primary_language": "PHP",
    "language_guidelines": "Programming Language guidelines for PHP:\n# General Guidelines:\n**General Guidelines for PHP Projects**\n\n1. **Read the README**  \n   Start by reading the project's README file on GitHub. It often contains important instructions for installation, usage, PHP version requirements, and any project-specific details.  \n\n2. **Check Dependencies**  \n   Look for dependencies listed in the README or in the `composer.json` file. Ensure you have the required PHP version and any extensions installed. Check for system requirements and PHP modules needed.  \n\n3. **PHP Installation**  \n   Ensure you have PHP installed with the required version. Verify installation:  \n   ```sh\n   php --version  \n   ```  \n   For Ubuntu/Debian systems, you can install PHP:  \n   ```sh\n   sudo apt update  \n   sudo apt install php php-cli php-common  \n   ```  \n\n4. **Composer Installation**  \n   Most modern PHP projects use Composer for dependency management. Install Composer if not already available:  \n   ```sh\n   curl -sS https://getcomposer.org/installer | php  \n   sudo mv composer.phar /usr/local/bin/composer  \n   ```  \n   Verify installation:  \n   ```sh\n   composer --version  \n   ```  \n\n5. **Install Dependencies**  \n   Use Composer to install project dependencies:  \n   ```sh\n   composer install  \n   ```  \n   For production environment:  \n   ```sh\n   composer install --no-dev --optimize-autoloader  \n   ```  \n\n6. **Autoloading**  \n   Ensure the autoloader is properly set up. Most projects using Composer will have:  \n   ```php\n   require_once 'vendor/autoload.php';  \n   ```  \n\n7. **Configuration**  \n   Check if the project requires any configuration files (e.g., `.env` files, `config.php`, database configuration) and set them up accordingly. Look for example configuration files like `.env.example`.  \n\n8. **Database Setup**  \n   If the project uses a database, set up the database connection and run any migrations:  \n   ```sh\n   php artisan migrate  # For Laravel projects  \n   ```  \n   Or check for SQL files in the project that need to be imported.  \n\n9. **Web Server Setup**  \n   For web applications, you can use PHP's built-in server for development:  \n   ```sh\n   php -S localhost:8000  \n   ```  \n   Or for specific document root:  \n   ```sh\n   php -S localhost:8000 -t public/  \n   ```  \n   For production, configure Apache/Nginx as described in the project documentation.  \n\n10. **Run Tests (if available)**  \n    If the project provides tests, run them to ensure everything is working correctly. Common test commands include:  \n    ```sh\n    ./vendor/bin/phpunit  \n    ```  \n    Or if using Composer scripts:  \n    ```sh\n    composer test  \n    ```  \n\n11. **Code Quality Tools**  \n    Use code quality tools if available in the project:  \n    - PHP CodeSniffer for coding standards:  \n      ```sh\n      ./vendor/bin/phpcs  \n      ```  \n    - PHP Stan for static analysis:  \n      ```sh\n      ./vendor/bin/phpstan analyse  \n      ```  \n    - PHP CS Fixer for code formatting:  \n      ```sh\n      ./vendor/bin/php-cs-fixer fix  \n      ```  \n\n12. **Run the Project**  \n    Follow the instructions in the README to run the project. This could involve:  \n    - Starting a web server  \n    - Running specific PHP scripts  \n    - Using framework-specific commands (e.g., `php artisan serve` for Laravel)  \n\n13. **Common PHP Extensions**  \n    Install commonly required PHP extensions if missing:  \n    ```sh\n    sudo apt install php-mysql php-pgsql php-sqlite3 php-curl php-json php-mbstring php-xml php-zip  \n    ```  \n\n14. **Memory and Execution Limits**  \n    Some projects may require adjusting PHP settings. Check `php.ini` for:  \n    - `memory_limit`  \n    - `max_execution_time`  \n    - `upload_max_filesize`  \n\n15. **Troubleshooting**  \n    If you encounter issues during installation or while running the project:  \n    - Check PHP error logs  \n    - Verify all required PHP extensions are installed  \n    - Ensure proper file permissions  \n    - Refer to the project's issue tracker on GitHub  \n\n16. **Test Suite Results**  \n    When running a test suite, it is normal for some test cases to fail. If the percentage of failing test cases is less than 20% of the total number, it is considered acceptable, and further investigation is usually not necessary.  \n\n17. **Framework-Specific Commands**  \n    Be aware of framework-specific tools and commands:  \n    - Laravel: `php artisan`  \n    - Symfony: `php bin/console`  \n    - CakePHP: `bin/cake`  \n    - CodeIgniter: framework-specific setup instructions  \n",
    "workflow_guidelines": "\nThe following workflow files might contain information on how to set up the project and run test cases.  This might be useful later on when building/installing and testing the project:\n\nfile: tests.yml\nContent:\nname: Build and test\n\non:\n  push:\n    branches:\n      - main\n  pull_request:\n    types: [opened, synchronize, reopened]\n  release:\n    types: [created]\n\nconcurrency:\n  group: Build ${{ github.ref }}\n  cancel-in-progress: true\n\npermissions:\n  contents: read\n  checks: write\n  id-token: write\n\njobs:\n  tests:\n    name: Run tests\n    uses: monicahq/workflows/.github/workflows/laravel.yml@v2\n    with:\n      php-versions: \"['8.3', '8.4']\"\n      connections: \"['sqlite', 'mysql', 'pgsql']\"\n      default-php-version: '8.3'\n      default-connection: sqlite\n      project: monica\n    secrets:\n      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}\n\n  assets:\n    name: Build assets\n    uses: monicahq/workflows/.github/workflows/build_assets.yml@v2\n    with:\n      node-version: 22\n",
    "readme": "<p align=\"center\">\n\n![Monica\u2019s Logo](https://user-images.githubusercontent.com/61099/242266547-63d98bd9-35f3-4dfe-92f4-a4a8dd75aa5c.png)\n\n</p>\n<h1 align=\"center\">Document your life</h1>\n\n<div align=\"center\">\n\n[![Docker pulls](https://img.shields.io/docker/pulls/library/monica)](https://hub.docker.com/_/monica/)\n![Lines of code](https://sloc.xyz/github/monicahq/monica/)\n[![Code coverage](https://img.shields.io/sonar/coverage/monica?server=https%3A%2F%2Fsonarcloud.io&style=flat-square&label=Coverage%20Status)](https://sonarcloud.io/project/activity?custom_metrics=coverage&graph=custom&id=monica)\n[![License](https://img.shields.io/github/license/monicahq/monica)](https://github.com/monicahq/monica/blob/main/LICENSE.md)\n\n</div>\n\n<p align=\"center\">\n  <a href=\"https://docs.monicahq.com\">Docs</a>\n  -\n  <a href=\"https://github.com/monicahq/monica/issues/new?assignees=&amp;labels=bug&amp;template=bug_report.md\">Bug report</a>\n</p>\n\n## Monica is an open source personal relationship management system, that lets you document your life.\n\n> [!WARNING]\n> This branch is in development. It\u2019s our beta version.\n>\n> If you want to browse the stable and current version, see the [4.x branch](https://github.com/monicahq/monica/tree/4.x).\n\n## Table of contents\n\n- [Introduction](#introduction)\n  - [Features](#features)\n  - [Who is it for?](#who-is-it-for)\n  - [What Monica isn\u2019t](#what-monica-isnt)\n- [Contribute](#contribute)\n  - [Contribute as a community](#contribute-as-a-community)\n  - [Contribute as a developer](#contribute-as-a-developer)\n- [Principles, vision, goals and strategy](#principles-vision-goals-and-strategy)\n  - [Principles](#principles)\n  - [Vision](#vision)\n  - [Goals](#goals)\n  - [Why Open Source?](#why-open-source)\n  - [Patreon](#patreon)\n- [Contact](#contact)\n- [Team](#team)\n- [Thank you, open source](#thank-you-open-source)\n- [License](#license)\n\n## Introduction\n\nMonica is an open-source web application that enables you to document your life, organize, and log your interactions with your family and friends. We call it a PRM, or Personal Relationship Management. Imagine a CRM\u2014a commonly used tool by sales teams in the corporate world\u2014for your friends and family.\n\n### Features\n\n- Add and manage contacts\n- Define relationships between contacts\n- Reminders\n- Automatic reminders for birthdays\n- Ability to add notes to a contact\n- Ability to record how you met someone\n- Management of activities with a contact\n- Management of tasks\n- Management of addresses and all the different ways to contact someone\n- Management of contact field types\n- Management of a contact\u2019s pets\n- Top of the art diary to keep track of what\u2019s happening in your life\n- Ability to record how your day went\n- Upload documents and photos\n- Ability to define custom genders\n- Ability to define custom activity types\n- Ability to favorite contacts\n- Multiple vaults and users\n- Labels to organize contacts\n- Ability to define what section should appear on the contact sheet\n- Multiple currencies\n- Translated in 27 languages\n\n### Who is it for?\n\nThis project is for people who want to document their lives and those who have difficulty remembering details about the lives of people they care about.\n\nWe\u2019ve also had a lot of positive reviews from people with Asperger syndrome, Alzheimer\u2019s disease, and introverts who use our app every day.\n\n### What Monica isn\u2019t\n\n- Monica is not a social network and **it never will be**. It\u2019s not meant to be social. It\u2019s designed to be the opposite: it\u2019s for your eyes only.\n- Monica is not a smart assistant. It won\u2019t guess what you want to do. It\u2019s actually pretty dumb: it will only send you emails for the things you asked to be reminded of.\n- Monica does not have built-in AI with integrations like ChatGPT.\n- Monica is not a tool that will scan your data and do nasty things with it. It\u2019s your data, your server, do whatever you want with it. You\u2019re in control of your data.\n\n## Contribute\n\nDo you want to lend a hand? That\u2019s great! We accept contributions from everyone, regardless of form.\n\nHere are some of the things you can do to help.\n\n### Contribute as a community\n\n- Unlike Fight Club, the best way to help is **to actually talk about Monica** as much as you can in blog posts and articles, or on social media.\n- You can answer questions in [the issue tracker](https://github.com/monicahq/monica/issues) to help other community members.\n- You can financially support Monica\u2019s development [on Patreon](https://www.patreon.com/monicahq) or by subscribing to [a paid account](https://monicahq.com/pricing).\n\n### Contribute as a developer\n\n- Read our [Contribution Guide](https://docs.monicahq.com/developers/contribution-guide).\n- Install [the developer version locally](https://docs.monicahq.com/developers/setup-local-development) so you can start contributing.\n- Look for [issues labelled \u2018Bugs\u2019](https://github.com/monicahq/monica/issues?q=is%3Aopen+is%3Aissue+label%3Abug) if you are looking to have an immediate impact on Monica.\n- Look for [issues labelled \u2018Help Wanted\u2019](https://github.com/monicahq/monica/issues?q=is%3Aissue+is%3Aopen+label%3A%22help+wanted%22). These are issues that you can solve relatively easily.\n- Look for [issues labelled \u2019Good First Issue\u2019](https://github.com/monicahq/monica/labels/good%20first%20issue). These issues are for people who want to contribute, but try to work on a small feature first.\n- If you are an advanced developer, you can try to tackle [issues labelled \u2018Feature Requests\u2019](https://github.com/monicahq/monica/issues?q=is%3Aopen+is%3Aissue+label%3A%22feature+request%22). These are harder to do and will require a lot of back-and-forth with the repository administrator to make sure we are going to the right direction with the product.\n\n## Principles, vision, goals and strategy\n\nWe want to use technology in a way that does not harm human relationships, unlike big social networks.\n\n### Principles\n\nMonica has a few principles.\n\n- It should help improve relationships.\n- It should be simple to use, simple to contribute to, simple to understand, extremely simple to maintain.\n- It is not a social network and never will be.\n- It is not and never will be ad-supported.\n- Users are not and never will be tracked.\n- It should be transparent.\n- It should be open-source.\n- It should do one thing (documenting your life) extremely well, and nothing more.\n- It should be well documented.\n\n### Vision\n\nMonica\u2019s vision is to **help people have more meaningful relationships**.\n\n### Goals\n\nWe want to provide a platform that is:\n\n- **really easy to use**: we value simplicity over anything else.\n- **open-source**: we believe everyone should be able to contribute to this tool, and see for themselves that nothing nasty is done behind the scenes that would go against the best interests of the users. We also want to leverage the community to build attractive features and do things that would not be possible otherwise.\n- **easy to contribute to**: we want to keep the codebase as simple as possible. This has two big advantages: anyone can contribute, and it\u2019s easily maintainable on the long run.\n- **available everywhere**: Monica should be able to run on any desktop OS or mobile phone easily. This will be made possible by making sure the tool is easily installable by anyone who wants to either contribute or host the platform themselves.\n\n### Why Open Source?\n\nWhy is Monica open source? Is it risky? Could someone steal my code and use it to start a for-profit business that could hurt my own? Why reveal our strategy to the world? We\u2019ve already received these kinds of questions in our emails.\n\nThe answer is simple: yes, you can fork Monica and create a competing project, make money from it (even if the license is not ideal for that) and we won\u2019t be aware. But that\u2019s okay, we don\u2019t mind.\n\nWe wanted to open source Monica for several reasons:\n\n- **We believe that this tool can really change people\u2019s lives.**\n  We aim to make money from this project, but also want everyone to benefit. Open sourcing it will help Monica become much bigger than we imagine. We believe the software should follow our vision, but we must be humble enough to recognize that ideas come from everywhere and people may have better ideas than us.\n- **You can\u2019t make something great alone.**\n  While Monica could become a company and hire a bunch of super smart people to work on it, you can\u2019t beat the manpower of an entire community. Open sourcing the product means bugs will be fixed faster, features will be developed faster, and more importantly, developers will be able to contribute to a tool that positively changes their own lives and the lives of other people.\n- **Doing things in a transparent way leads to formidable things.**\n  People respect the project more when they can see how it\u2019s being worked on. You can\u2019t hide nasty things in the code. You can\u2019t do things behind the backs of your users. Doing everything in the open is a major driving force that motivates you to keep doing what\u2019s right.\n- **Once you\u2019ve created a community of passionate developers around your project, you\u2019ve won.**\n  Developers are powerful influencers: they create apps, discuss your product on forums, and share it with their networks. Nurture your relationship with developers \u2013 users will follow.\n\n### Patreon\n\nYou can support the development of Monica [on Patreon](https://www.patreon.com/monicahq). Thanks for your help.\n\n## Contact\n\n## Team\n\nOur team is made of two core members:\n\n- [Regis (djaiss)](https://github.com/djaiss)\n- [Alexis Saettler (asbiin)](https://github.com/asbiin)\n\nWe are also fortunate to have an amazing [community of developers](https://github.com/monicahq/monica/graphs/contributors) who help us greatly.\n\n## Thank you, open source\n\nMonica makes use of numerous open-source projects and we are deeply grateful. We hope that by offering Monica as a free, open-source project, we can help others in the same way these programs have helped us.\n\n## License\n\nCopyright \u00a9 2016\u20132023\n\nLicensed under [the AGPL License](/LICENSE.md).\n",
    "org": "monicahq",
    "repo": "monica",
    "number": 7781,
    "commit": "d74034fd492d44225fe676dc2e8d5933b34c72f4"
}