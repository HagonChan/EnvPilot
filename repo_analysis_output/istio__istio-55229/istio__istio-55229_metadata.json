{
    "primary_language": "Go",
    "language_guidelines": "# General Guidelines:\n\n**General Guidelines for Go Projects**\n\n1. **Read the README**  \n   Start by reading the project's README file on GitHub. It often contains important instructions for installation, usage, and any project-specific details, including Go version requirements.\n\n2. **Check Dependencies**  \n   Look for dependencies listed in the README or in the `go.mod` file. Ensure you have the required Go version installed. Check the `go` directive in `go.mod` for version requirements.\n\n3. **Go Installation**  \n   Ensure you have Go installed. Download from https://golang.org/dl/ if needed. Verify installation:\n\n    ```sh\n    go version\n    ```\n\n4. **Module Management**  \n   If the project uses Go modules (most modern projects do), the `go.mod` file manages dependencies. Download dependencies:\n\n    ```sh\n    go mod download\n    ```\n\n    Tidy up dependencies:\n\n    ```sh\n    go mod tidy\n    ```\n\n5. **Build the Project**  \n   Use Go to build the project:\n\n    ```sh\n    go build\n    ```\n\n    For specific packages:\n\n    ```sh\n    go build ./cmd/package_name\n    ```\n\n    For cross-compilation:\n\n    ```sh\n    GOOS=linux GOARCH=amd64 go build\n    ```\n\n6. **Configuration**  \n   Check if the project requires any configuration files (e.g., `.env` files, YAML/JSON config files) and set them up accordingly. Some projects may use environment variables for configuration.\n\n7. **Run Tests (if available)**  \n   If the project provides tests, run them to ensure everything is working correctly:\n\n    ```sh\n    go test ./...\n    ```\n\n    For verbose output:\n\n    ```sh\n    go test -v ./...\n    ```\n\n    For coverage:\n\n    ```sh\n    go test -cover ./...\n    ```\n\n8. **Run the Project**  \n   Follow the instructions in the README to run the project. Common commands include:\n\n    ```sh\n    go run main.go\n    ```\n\n    For specific packages:\n\n    ```sh\n    go run ./cmd/package_name\n    ```\n\n9. **Code Quality**  \n   Use Go's built-in tools for code quality:\n\n    - Format code:\n        ```sh\n        go fmt ./...\n        ```\n    - Vet code for potential issues:\n        ```sh\n        go vet ./...\n        ```\n    - Use golint if available:\n        ```sh\n        golint ./...\n        ```\n\n10. **Vendor Dependencies (if used)**  \n    Some projects might use vendored dependencies:\n\n    ```sh\n    go mod vendor\n    ```\n\n11. **Documentation**  \n    Generate documentation:\n\n    ```sh\n    go doc package_name\n    ```\n\n    Or use godoc for local server:\n\n    ```sh\n    godoc -http=:6060\n    ```\n\n12. **Troubleshooting**  \n    If you encounter issues during installation or while running the project, refer to the project's issue tracker on GitHub or search for similar issues. Check Go's error messages carefully as they are usually descriptive.\n\n13. **Test Suite Results**  \n    When running a test suite, it is normal for some test cases to fail. If the percentage of failing test cases is less than 20% of the total number, it is considered acceptable, and further investigation is usually not necessary.\n\n14. **Environment Setup**  \n    Set up Go environment variables if needed:\n    ```sh\n    export GOPATH=$HOME/go\n    export PATH=$PATH:$GOPATH/bin\n    ```\n    Note: GOPATH is less important with Go modules but may still be needed for some legacy projects.\n",
    "workflow_guidelines": "",
    "readme": "# Istio\n\n[![CII Best Practices](https://bestpractices.coreinfrastructure.org/projects/1395/badge)](https://bestpractices.coreinfrastructure.org/projects/1395)\n[![Go Report Card](https://goreportcard.com/badge/github.com/istio/istio)](https://goreportcard.com/report/github.com/istio/istio)\n[![GoDoc](https://godoc.org/istio.io/istio?status.svg)](https://godoc.org/istio.io/istio)\n\n<a href=\"https://istio.io/\">\n    <img src=\"https://github.com/istio/istio/raw/master/logo/istio-bluelogo-whitebackground-unframed.svg\"\n         alt=\"Istio logo\" title=\"Istio\" height=\"100\" width=\"100\" />\n</a>\n\n---\n\nIstio is an open source service mesh that layers transparently onto existing distributed applications. Istio\u2019s powerful features provide a uniform and more efficient way to secure, connect, and monitor services. Istio is the path to load balancing, service-to-service authentication, and monitoring \u2013 with few or no service code changes.\n\n- For in-depth information about how to use Istio, visit [istio.io](https://istio.io)\n- To ask questions and get assistance from our community, visit [Github Discussions](https://github.com/istio/istio/discussions)\n- To learn how to participate in our overall community, visit [our community page](https://istio.io/about/community)\n\nIn this README:\n\n- [Introduction](#introduction)\n- [Repositories](#repositories)\n- [Issue management](#issue-management)\n\nIn addition, here are some other documents you may wish to read:\n\n- [Istio Community](https://github.com/istio/community#istio-community) - describes how to get involved and contribute to the Istio project\n- [Istio Developer's Guide](https://github.com/istio/istio/wiki/Preparing-for-Development) - explains how to set up and use an Istio development environment\n- [Project Conventions](https://github.com/istio/istio/wiki/Development-Conventions) - describes the conventions we use within the code base\n- [Creating Fast and Lean Code](https://github.com/istio/istio/wiki/Writing-Fast-and-Lean-Code) - performance-oriented advice and guidelines for the code base\n\nYou'll find many other useful documents on our [Wiki](https://github.com/istio/istio/wiki).\n\n## Introduction\n\n[Istio](https://istio.io/latest/docs/concepts/what-is-istio/) is an open platform for providing a uniform way to [integrate\nmicroservices](https://istio.io/latest/docs/examples/microservices-istio/), manage [traffic flow](https://istio.io/latest/docs/concepts/traffic-management/) across microservices, enforce policies\nand aggregate telemetry data. Istio's control plane provides an abstraction\nlayer over the underlying cluster management platform, such as Kubernetes.\n\nIstio is composed of these components:\n\n- **Envoy** - Sidecar proxies per microservice to handle ingress/egress traffic\n   between services in the cluster and from a service to external\n   services. The proxies form a _secure microservice mesh_ providing a rich\n   set of functions like discovery, rich layer-7 routing, circuit breakers,\n   policy enforcement and telemetry recording/reporting\n   functions.\n\n  > Note: The service mesh is not an overlay network. It\n  > simplifies and enhances how microservices in an application talk to each\n  > other over the network provided by the underlying platform.\n\n- **Istiod** - The Istio control plane. It provides service discovery, configuration and certificate management. It consists of the following sub-components:\n\n    - **Pilot** - Responsible for configuring the proxies at runtime.\n\n    - **Citadel** - Responsible for certificate issuance and rotation.\n\n    - **Galley** - Responsible for validating, ingesting, aggregating, transforming and distributing config within Istio.\n\n- **Operator** - The component provides user friendly options to operate the Istio service mesh.\n\n## Repositories\n\nThe Istio project is divided across a few GitHub repositories:\n\n- [istio/api](https://github.com/istio/api). This repository defines\ncomponent-level APIs and common configuration formats for the Istio platform.\n\n- [istio/community](https://github.com/istio/community). This repository contains\ninformation on the Istio community, including the various documents that govern\nthe Istio open source project.\n\n- [istio/istio](README.md). This is the main code repository. It hosts Istio's\ncore components, install artifacts, and sample programs. It includes:\n\n    - [istioctl](istioctl/). This directory contains code for the\n[_istioctl_](https://istio.io/latest/docs/reference/commands/istioctl/) command line utility.\n\n    - [pilot](pilot/). This directory\ncontains platform-specific code to populate the\n[abstract service model](https://istio.io/docs/concepts/traffic-management/#pilot), dynamically reconfigure the proxies\nwhen the application topology changes, as well as translate\n[routing rules](https://istio.io/latest/docs/reference/config/networking/) into proxy specific configuration.\n\n    - [security](security/). This directory contains [security](https://istio.io/latest/docs/concepts/security/) related code,\nincluding Citadel (acting as Certificate Authority), citadel agent, etc.\n\n- [istio/proxy](https://github.com/istio/proxy). The Istio proxy contains\nextensions to the [Envoy proxy](https://github.com/envoyproxy/envoy) (in the form of\nEnvoy filters) that support authentication, authorization, and telemetry collection.\n\n- [istio/ztunnel](https://github.com/istio/ztunnel). The repository contains the Rust implementation of the ztunnel\ncomponent of Ambient mesh.\n\n- [istio/client-go](https://github.com/istio/client-go). This repository defines\n  auto-generated Kubernetes clients for interacting with Istio resources programmatically.\n\n> [!NOTE]\n> Only the `istio/api` and `istio/client-go` repositories expose stable interfaces intended for direct usage as libraries.\n\n## Issue management\n\nWe use GitHub to track all of our bugs and feature requests. Each issue we track has a variety of metadata:\n\n- **Epic**. An epic represents a feature area for Istio as a whole. Epics are fairly broad in scope and are basically product-level things.\nEach issue is ultimately part of an epic.\n\n- **Milestone**. Each issue is assigned a milestone. This is 0.1, 0.2, ..., or 'Nebulous Future'. The milestone indicates when we\nthink the issue should get addressed.\n\n- **Priority**. Each issue has a priority which is represented by the column in the [Prioritization](https://github.com/orgs/istio/projects/6) project. Priority can be one of\nP0, P1, P2, or >P2. The priority indicates how important it is to address the issue within the milestone. P0 says that the\nmilestone cannot be considered achieved if the issue isn't resolved.\n\n---\n\n<div align=\"center\">\n    <img src=\"https://raw.githubusercontent.com/cncf/artwork/master/other/cncf/horizontal/color/cncf-color.svg\" width=\"300\" alt=\"Cloud Native Computing Foundation logo\"/>\n    <p>Istio is a <a href=\"https://cncf.io\">Cloud Native Computing Foundation</a> project.</p>\n</div>\n"
}