{
    "primary_language": "PHP",
    "language_guidelines": "",
    "workflow_guidelines": "\nThe following workflow files might contain information on how to set up the project and run test cases.  This might be useful later on when building/installing and testing the project:\n\nfile: tests.yml\nContent:\nname: Tests\n\non: [push, pull_request]\n\njobs:\n  tests:\n    name: Tests PHP ${{ matrix.php }}\n    runs-on: ubuntu-latest\n    continue-on-error: ${{ matrix.experimental }}\n    strategy:\n      fail-fast: false\n      matrix:\n        php: [7.4, 8.0, 8.1, 8.2, 8.3]\n        experimental: [false]\n        include:\n          - php: 8.2\n            analysis: true\n\n    steps:\n      - name: Checkout\n        uses: actions/checkout@v4\n\n      - name: Set up PHP ${{ matrix.php }}\n        uses: shivammathur/setup-php@v2\n        with:\n          php-version: ${{ matrix.php }}\n          coverage: xdebug\n\n      - name: Install dependencies with Composer\n        uses: ramsey/composer-install@v3\n\n      - name: Coding standards\n        if: matrix.analysis\n        run: vendor/bin/phpcs\n\n      - name: Static analysis\n        if: matrix.analysis\n        run: vendor/bin/phpstan\n\n      - name: Tests\n        run: vendor/bin/phpunit --coverage-clover clover.xml\n\n      - name: Upload coverage results to Coveralls\n        if: matrix.analysis\n        env:\n          COVERALLS_REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n        run: |\n          composer require php-coveralls/php-coveralls -n -W\n          vendor/bin/php-coveralls --coverage_clover=clover.xml -v\n",
    "readme": "# Slim Framework\n\n[![Build Status](https://github.com/slimphp/Slim/workflows/Tests/badge.svg?branch=4.x)](https://github.com/slimphp/Slim/actions?query=branch:4.x)\n[![Coverage Status](https://coveralls.io/repos/github/slimphp/Slim/badge.svg?branch=4.x)](https://coveralls.io/github/slimphp/Slim?branch=4.x)\n[![Total Downloads](https://poser.pugx.org/slim/slim/downloads)](https://packagist.org/packages/slim/slim)\n[![License](https://poser.pugx.org/slim/slim/license)](https://packagist.org/packages/slim/slim)\n\nSlim is a PHP micro-framework that helps you quickly write simple yet powerful web applications and APIs.\n\n## Installation\n\nIt's recommended that you use [Composer](https://getcomposer.org/) to install Slim.\n\n```bash\n$ composer require slim/slim\n```\n\nThis will install Slim and all required dependencies. Slim requires PHP 7.4 or newer.\n\n## Choose a PSR-7 Implementation & ServerRequest Creator\n\nBefore you can get up and running with Slim you will need to choose a PSR-7 implementation that best fits your application. A few notable ones:\n- [Slim-Psr7](https://github.com/slimphp/Slim-Psr7) - This is the Slim Framework PSR-7 implementation\n- [httpsoft/http-message](https://github.com/httpsoft/http-message) & [httpsoft/http-server-request](https://github.com/httpsoft/http-server-request) - This is the fastest, strictest and most lightweight implementation available\n- [Nyholm/psr7](https://github.com/Nyholm/psr7) & [Nyholm/psr7-server](https://github.com/Nyholm/psr7-server) - Performance is almost the same as the HttpSoft implementation\n- [Guzzle/psr7](https://github.com/guzzle/psr7) - This is the implementation used by the Guzzle Client, featuring extra functionality for stream and file handling\n- [laminas-diactoros](https://github.com/laminas/laminas-diactoros) - This is the Laminas (Zend) PSR-7 implementation\n\n\n## Slim-Http Decorators\n\n[Slim-Http](https://github.com/slimphp/Slim-Http) is a set of decorators for any PSR-7 implementation that we recommend is used with Slim Framework.\nTo install the Slim-Http library simply run the following command:\n\n```bash\ncomposer require slim/http\n```\n\nThe `ServerRequest` and `Response` object decorators are automatically detected and applied by the internal factories. If you have installed Slim-Http and wish to turn off automatic object decoration then you can use the following statements:\n```php\n<?php\n\nuse Slim\\Factory\\AppFactory;\nuse Slim\\Factory\\ServerRequestCreatorFactory;\n\nAppFactory::setSlimHttpDecoratorsAutomaticDetection(false);\nServerRequestCreatorFactory::setSlimHttpDecoratorsAutomaticDetection(false);\n\n$app = AppFactory::create();\n\n// ...\n```\n\n## Hello World using AppFactory with PSR-7 auto-detection\nIn order for auto-detection to work and enable you to use `AppFactory::create()` and `App::run()` without having to manually create a `ServerRequest` you need to install one of the following implementations:\n- [Slim-Psr7](https://github.com/slimphp/Slim-Psr7) - Install using `composer require slim/psr7`\n- [httpsoft/http-message](https://github.com/httpsoft/http-message) & [httpsoft/http-server-request](https://github.com/httpsoft/http-server-request) - Install using:\n`composer require httpsoft/http-message httpsoft/http-server-request`\n- [Nyholm/psr7](https://github.com/Nyholm/psr7) & [Nyholm/psr7-server](https://github.com/Nyholm/psr7-server) - Install using `composer require nyholm/psr7 nyholm/psr7-server`\n- [Guzzle/psr7](https://github.com/guzzle/psr7) - Install using `composer require guzzlehttp/psr7`\n- [laminas-diactoros](https://github.com/laminas/laminas-diactoros) - Install using `composer require laminas/laminas-diactoros`\n\nThen create file _public/index.php_.\n\n```php\n<?php\nuse Psr\\Http\\Message\\ResponseInterface as Response;\nuse Psr\\Http\\Message\\ServerRequestInterface as Request;\nuse Slim\\Factory\\AppFactory;\n\nrequire __DIR__ . '/../vendor/autoload.php';\n\n// Instantiate App\n$app = AppFactory::create();\n\n// Add error middleware\n$app->addErrorMiddleware(true, true, true);\n\n// Add routes\n$app->get('/', function (Request $request, Response $response) {\n    $response->getBody()->write('<a href=\"/hello/world\">Try /hello/world</a>');\n    return $response;\n});\n\n$app->get('/hello/{name}', function (Request $request, Response $response, $args) {\n    $name = $args['name'];\n    $response->getBody()->write(\"Hello, $name\");\n    return $response;\n});\n\n$app->run();\n```\n\nYou may quickly test this using the built-in PHP server:\n```bash\n$ php -S localhost:8000 -t public\n```\n\nGoing to http://localhost:8000/hello/world will now display \"Hello, world\".\n\nFor more information on how to configure your web server, see the [Documentation](https://www.slimframework.com/docs/v4/start/web-servers.html).\n\n## Tests\nTo execute the test suite, you'll need to install all development dependencies.\n\n```bash\n$ git clone https://github.com/slimphp/Slim\n$ composer install\n$ composer test\n```\n\n## Contributing\n\nPlease see [CONTRIBUTING](CONTRIBUTING.md) for details.\n\n## Learn More\n\nLearn more at these links:\n\n- [Website](https://www.slimframework.com)\n- [Documentation](https://www.slimframework.com/docs/v4/start/installation.html)\n- [Slack](https://slimphp.slack.com)\n- [Support Forum](https://discourse.slimframework.com)\n- [Twitter](https://twitter.com/slimphp)\n- [Resources](https://github.com/xssc/awesome-slim)\n\n## Security\n\nIf you discover security related issues, please email security@slimframework.com instead of using the issue tracker.\n\n## For enterprise\n\nAvailable as part of the Tidelift Subscription.\n\nThe maintainers of `Slim` and thousands of other packages are working with Tidelift to deliver commercial support and maintenance for the open source dependencies you use to build your applications. Save time, reduce risk, and improve code health, while paying the maintainers of the exact dependencies you use. [Learn more.](https://tidelift.com/subscription/pkg/packagist-slim-slim?utm_source=packagist-slim-slim&utm_medium=referral&utm_campaign=enterprise&utm_term=repo)\n\n## Contributors\n\n### Code Contributors\n\nThis project exists thanks to all the people who contribute. [Contribute](CONTRIBUTING.md).\n<a href=\"https://github.com/slimphp/Slim/graphs/contributors\">\n    <img src=\"https://opencollective.com/slimphp/contributors.svg?width=890&button=false\" />\n</a>\n\n### Financial Contributors\n\nBecome a financial contributor and help us sustain our community. [Contribute](https://opencollective.com/slimphp/contribute)\n\n#### Individuals\n\n<a href=\"https://opencollective.com/slimphp\"><img src=\"https://opencollective.com/slimphp/individuals.svg?width=890\"></a>\n\n#### Organizations\n\nSupport this project with your organization. Your logo will show up here with a link to your website. [Contribute](https://opencollective.com/slimphp/contribute)\n\n<a href=\"https://opencollective.com/slimphp/organization/0/website\"><img src=\"https://opencollective.com/slimphp/organization/0/avatar.svg\"></a>\n<a href=\"https://opencollective.com/slimphp/organization/1/website\"><img src=\"https://opencollective.com/slimphp/organization/1/avatar.svg\"></a>\n<a href=\"https://opencollective.com/slimphp/organization/2/website\"><img src=\"https://opencollective.com/slimphp/organization/2/avatar.svg\"></a>\n<a href=\"https://opencollective.com/slimphp/organization/3/website\"><img src=\"https://opencollective.com/slimphp/organization/3/avatar.svg\"></a>\n<a href=\"https://opencollective.com/slimphp/organization/4/website\"><img src=\"https://opencollective.com/slimphp/organization/4/avatar.svg\"></a>\n<a href=\"https://opencollective.com/slimphp/organization/5/website\"><img src=\"https://opencollective.com/slimphp/organization/5/avatar.svg\"></a>\n<a href=\"https://opencollective.com/slimphp/organization/6/website\"><img src=\"https://opencollective.com/slimphp/organization/6/avatar.svg\"></a>\n<a href=\"https://opencollective.com/slimphp/organization/7/website\"><img src=\"https://opencollective.com/slimphp/organization/7/avatar.svg\"></a>\n<a href=\"https://opencollective.com/slimphp/organization/8/website\"><img src=\"https://opencollective.com/slimphp/organization/8/avatar.svg\"></a>\n<a href=\"https://opencollective.com/slimphp/organization/9/website\"><img src=\"https://opencollective.com/slimphp/organization/9/avatar.svg\"></a>\n\n## License\n\nThe Slim Framework is licensed under the MIT license. See [License File](LICENSE.md) for more information.\n"
}