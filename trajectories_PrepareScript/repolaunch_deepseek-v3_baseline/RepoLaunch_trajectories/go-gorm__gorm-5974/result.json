{
  "instance_id": "go-gorm__gorm-5974",
  "base_image": "ubuntu:22.04",
  "setup_commands": [
    "apt-get update && apt-get install -y golang-1.16",
    "wget https://go.dev/dl/go1.16.15.linux-amd64.tar.gz && tar -C /usr/local -xzf go1.16.15.linux-amd64.tar.gz && export PATH=$PATH:/usr/local/go/bin",
    "apt-get install -y wget && wget https://go.dev/dl/go1.16.15.linux-amd64.tar.gz && tar -C /usr/local -xzf go1.16.15.linux-amd64.tar.gz && export PATH=$PATH:/usr/local/go/bin",
    "go version && echo $PATH",
    "go mod download",
    "apt-get install -y docker-compose",
    "cd tests && docker-compose up -d",
    "service docker start",
    "apt-get install -y docker.io && service docker start",
    "systemctl start docker",
    "dockerd &",
    "docker ps",
    "apt-get install -y docker.io && dockerd &",
    "docker ps",
    "go test ./...",
    "go mod download",
    "go test ./...",
    "go get -t ./...",
    "wget https://go.dev/dl/go1.21.0.linux-amd64.tar.gz && tar -C /usr/local -xzf go1.21.0.linux-amd64.tar.gz && export PATH=$PATH:/usr/local/go/bin",
    "go version && go test ./...",
    "go mod download",
    "go test ./...",
    "go get -t ./...",
    "go test ./...",
    "rm -rf /usr/local/go && wget https://go.dev/dl/go1.16.15.linux-amd64.tar.gz && tar -C /usr/local -xzf go1.16.15.linux-amd64.tar.gz && export PATH=$PATH:/usr/local/go/bin",
    "go version && go test ./...",
    "cd /testbed && go mod tidy && go test ./..."
  ],
  "test_commands": [],
  "duration": 7,
  "completed": null,
  "exception": "Launch failed"
}